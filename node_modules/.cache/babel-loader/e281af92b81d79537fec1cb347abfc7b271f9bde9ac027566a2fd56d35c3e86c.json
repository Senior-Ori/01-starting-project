{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ori88\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [inputIsTouch, setInputIsTouch] = useState(false);\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredFirstNameIsValid = firstName.trim() !== \"\";\n  const firstNameInputIsInvalid = !enteredFirstNameIsValid && inputIsTouch;\n  const enteredLastNameIsValid = lastName.trim() !== \"\";\n  const lastNameInputIsInvalid = !enteredLastNameIsValid && inputIsTouch;\n  const enteredEmailIsValid = email.trim() !== \"\" && email.includes(\"@\");\n  const emailInputIsInvalid = !enteredEmailIsValid && inputIsTouch;\n  useEffect(() => {\n    if (firstNameInputIsInvalid || lastNameInputIsInvalid || emailInputIsInvalid) {\n      setFormIsValid(false);\n    } else {\n      setFormIsValid(true);\n    }\n  }, [firstNameInputIsInvalid, lastNameInputIsInvalid, emailInputIsInvalid]);\n  const enteredFirstNameHandler = event => {\n    setFirstName(event.target.value);\n  };\n  const enteredLastNameHandler = event => {\n    setLastName(event.target.value);\n  };\n  const enteredEmailHandler = event => {\n    setEmail(event.target.value);\n  };\n  const firstNameInputBlurHandler = event => {\n    setInputIsTouch(true);\n  };\n  const lastNameInputBlurHandler = event => {\n    setInputIsTouch(true);\n  };\n  const emailInputBlurHandler = () => {\n    setInputIsTouch(true);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setInputIsTouch(true);\n    if (!enteredFirstNameIsValid || !enteredLastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setInputIsTouch(false);\n    // setFormIsValid(false);\n  };\n\n  const firstNameClasses = firstNameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first-name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"first-name\",\n          onChange: enteredFirstNameHandler,\n          value: firstName,\n          onBlur: firstNameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), firstNameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Fist name is not empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"last-name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"last-name\",\n          onChange: enteredLastNameHandler,\n          value: lastName,\n          onBlur: lastNameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), lastNameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name is not empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: enteredEmailHandler,\n        value: email,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is not empty and must have @ charactor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"+ivfQWLhjQqsrVPKPvzXPwdTL00=\");\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["React","useState","useEffect","BasicForm","props","firstName","setFirstName","inputIsTouch","setInputIsTouch","lastName","setLastName","email","setEmail","formIsValid","setFormIsValid","enteredFirstNameIsValid","trim","firstNameInputIsInvalid","enteredLastNameIsValid","lastNameInputIsInvalid","enteredEmailIsValid","includes","emailInputIsInvalid","enteredFirstNameHandler","event","target","value","enteredLastNameHandler","enteredEmailHandler","firstNameInputBlurHandler","lastNameInputBlurHandler","emailInputBlurHandler","submitHandler","preventDefault","firstNameClasses","lastNameClasses","emailClasses"],"sources":["C:/Users/ori88/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst BasicForm = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [inputIsTouch, setInputIsTouch] = useState(false);\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredFirstNameIsValid = firstName.trim() !== \"\";\n  const firstNameInputIsInvalid = !enteredFirstNameIsValid && inputIsTouch;\n\n  const enteredLastNameIsValid = lastName.trim() !== \"\";\n  const lastNameInputIsInvalid = !enteredLastNameIsValid && inputIsTouch;\n\n  const enteredEmailIsValid = email.trim() !== \"\" && email.includes(\"@\");\n  const emailInputIsInvalid = !enteredEmailIsValid && inputIsTouch;\n\n  useEffect(() => {\n    if (\n      firstNameInputIsInvalid ||\n      lastNameInputIsInvalid ||\n      emailInputIsInvalid\n    ) {\n      setFormIsValid(false);\n    } else {\n      setFormIsValid(true);\n    }\n  }, [firstNameInputIsInvalid, lastNameInputIsInvalid, emailInputIsInvalid]);\n\n  const enteredFirstNameHandler = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const enteredLastNameHandler = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const enteredEmailHandler = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const firstNameInputBlurHandler = (event) => {\n    setInputIsTouch(true);\n  };\n\n  const lastNameInputBlurHandler = (event) => {\n    setInputIsTouch(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setInputIsTouch(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setInputIsTouch(true);\n\n    if (\n      !enteredFirstNameIsValid ||\n      !enteredLastNameIsValid ||\n      !enteredEmailIsValid\n    ) {\n      return;\n    }\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setInputIsTouch(false);\n    // setFormIsValid(false);\n  };\n\n  const firstNameClasses = firstNameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameClasses = lastNameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"first-name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"first-name\"\n            onChange={enteredFirstNameHandler}\n            value={firstName}\n            onBlur={firstNameInputBlurHandler}\n          />\n          {firstNameInputIsInvalid && (\n            <p className=\"error-text\">Fist name is not empty!</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"last-name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"last-name\"\n            onChange={enteredLastNameHandler}\n            value={lastName}\n            onBlur={lastNameInputBlurHandler}\n          />\n          {lastNameInputIsInvalid && (\n            <p className=\"error-text\">Last name is not empty</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={enteredEmailHandler}\n          value={email}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">\n            Email is not empty and must have @ charactor\n          </p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}