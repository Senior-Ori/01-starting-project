{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ori88\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredTouched, setEnteredTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredTouched;\n  const emailInputIsValid = enteredEmail.includes(\"@\") && enteredEmail.includes(\".\");\n  const emailInputIsInvalid = !emailInputIsValid && enteredTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && emailInputIsValid) formIsValid = true;\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredTouched(true);\n  };\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredTouched(true);\n    if (!(enteredNameIsValid && emailInputIsValid)) {\n      return;\n    }\n    console.log(enteredName, enteredEmail);\n\n    // nameInputRef.current.value = \"\"; >> not ideal but it works, don't manipulate the DOM.\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty, and email is empty or wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"0vZEJq1NoHaSdqiM5XvidUQAOHE=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredTouched","setEnteredTouched","enteredNameIsValid","trim","nameInputIsInvalid","emailInputIsValid","includes","emailInputIsInvalid","formIsValid","emailInputChangeHandler","event","target","value","emailInputBlurHandler","nameInputChangeHandler","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["C:/Users/ori88/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const [enteredTouched, setEnteredTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredTouched;\n\n  const emailInputIsValid =\n    enteredEmail.includes(\"@\") && enteredEmail.includes(\".\");\n\n  const emailInputIsInvalid = !emailInputIsValid && enteredTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && emailInputIsValid) formIsValid = true;\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredTouched(true);\n  };\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredTouched(true);\n\n    if (!(enteredNameIsValid && emailInputIsValid)) {\n      return;\n    }\n\n    console.log(enteredName, enteredEmail);\n\n    // nameInputRef.current.value = \"\"; >> not ideal but it works, don't manipulate the DOM.\n\n    setEnteredName(\"\");\n\n    setEnteredEmail(\"\");\n\n    setEnteredTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n\n        <label htmlFor=\"email\">Your Email</label>\n\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n\n        {nameInputIsInvalid && emailInputIsInvalid && (\n          <p className=\"error-text\">\n            Name must not be empty, and email is empty or wrong.\n          </p>\n        )}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}